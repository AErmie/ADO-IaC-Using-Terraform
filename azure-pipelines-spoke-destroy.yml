trigger:
  branches:
    include:
      - master
  paths:
    include:
      - /cleanup-spoke.txt

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: Terraform-BuildVariables
  - name: subscription_id
    value: "c28db86b-8ce1-4755-aa09-fc99f6e0a667"
  - name: application_id
    value: "cb8b3e7b-d65c-4307-aa8f-20cc1d5b3498"
  - name: tenant_id
    value: "b033afe0-c9e4-48f6-99d3-d00269efb830"
  - name: storage_accounts
    value: "azuredevopssa"
  - name: blob_storage
    value: container01-azuredevops
  - name: state_file
    value: tf-statefile-spoke.state
  - name: sa-resource_group
    value: AzureDevOps

steps:
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: "Install Terraform"
    inputs:
      terraformVersion: '0.12.26'
  - script: terraform version
    displayName: "Terraform Version"
  - script:  az login --service-principal -u $(application_id) -p $(spn-azuredevops-password2) --tenant $(tenant_id)
    displayName: "Log Into Azure"
  - script: terraform init -backend-config=resource_group_name=$(sa-resource_group) -backend-config="storage_account_name=$(storage_accounts)" -backend-config="container_name=$(blob_storage)" -backend-config="access_key=$(sa01-azdo-accesskey)" -backend-config="key=$(state_file)"
    displayName: "Terraform Init"
    workingDirectory: $(System.DefaultWorkingDirectory)/Terraform/Networking/Deployments/Network-Deployment/Spoke-Deploy
  - script: terraform destroy -var="client_id=$(application_id)" -var="client_secret=$(spn-azuredevops-password2)" -var="tenant_id=$(tenant_id)" -var="subscription_id=$(subscription_id)" -var-file="Spoke.tfvars" -auto-approve
    displayName: "Terraform Destroy"
    workingDirectory: $(System.DefaultWorkingDirectory)/Terraform/Networking/Deployments/Network-Deployment/Spoke-Deploy